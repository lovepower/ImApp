apply plugin: 'com.android.application'
/**
 * 主Model App ——> build.gradle
 * N个副Model ——> build.gradle
 *
 * 1.统一性
 * 2.便于管理
 * 3.版本管理
 *
 * Gradle构建的三个性能指标：
 * - 全量编译：全部编译 - Open Project
 * - 代码增量编译：修改了Java/Kotlin下面的代码的时候编译
 * - 资源增量编译：修改了res下面的资源文件的时候编译
 *
 * 发布App到应用市场：多渠道打包/全部打包
 * 调试：不需要这么多，DEBUG
 */
android {
    if (rootProject.hasProperty("devBuild")) {
        splits.abi.enable = false
        splits.density.enable = false
        //禁用PNG压缩
        aaptOptions.cruncherEnabled = false
    }
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId rootProject.ext.android["applicationId"]
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            buildConfigField("boolean", "LOG_DEBUG", "true")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //添加Framework依赖
    implementation project(path: ':framework')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
